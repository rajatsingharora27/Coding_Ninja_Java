package dp1;

public class Steps_to_1 {

	public static int stepsTo1(int n) {
		if(n==1) {
			return 0;
		}
		int op1=stepsTo1(n-1);
		int minSteps=op1;
		if(n%2==0) {
			int op2=stepsTo1(n/2);
			if(op2<minSteps) {
				minSteps=op2;
			}
		}
		if(n%3==0) {
			int op3=stepsTo1(n/3);
			if(op3<minSteps) {
				minSteps=op3;
			}
		}
		return 1+minSteps;

	}

	public static int stepsTo1M(int n) {
		int storage[]=new int[n+1];
		return stepsTo1M(n,storage);
	}

	//using memoization

	public static int stepsTo1M(int n,int storage[]) {
		if(n==1) {
			storage[n]=0;
			return storage[n];
		}

		if(storage[n]!=0) {
			return storage[n];
		}

		int op1=stepsTo1M(n-1);
		int minSteps=op1;
		if(n%2==0) {
			int op2=stepsTo1M(n/2);
			if(op2<minSteps) {
				minSteps=op2;
			}
		}
		if(n%3==0) {
			int op3=stepsTo1M(n/3);
			if(op3<minSteps) {
				minSteps=op3;
			}
		}
		storage[n]=1+minSteps;

		return  storage[n];

	}

	public static int stepsTo1DP(int n) {
		int storage[]=new int[n+1];

		storage[1]=0;

		for(int i=2;i<=n;i++) {

			int minSteps=storage[i-1];

			if(i%2==0) {
				int op2=storage[i/2];
				if(minSteps>op2) {
					minSteps=op2;
				}
			}

			if(i%3==0) {
				int op3=storage[i/3];
				if(minSteps>op3) {
					minSteps=op3;
				}
			}
			
		storage[i]=1+minSteps;	
		}
		
		return storage[n];
	}





	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int n=100;
		System.out.println(stepsTo1DP(n));
		System.out.println(stepsTo1M(n));
		System.out.println(stepsTo1(n));
	}

}
