package graph;
import java.util.*;
//import java.util.Scanner;*;

public class All_connected_component {

	public static void all_connected_components(int edge[][]) {
		int n=edge.length;
		boolean flag[]=new boolean[n];
		
		ArrayList<ArrayList<Integer>>ans=new ArrayList<>();
		
		for(int i=0;i<n;i++) {
			if(!flag[i]) {
				ArrayList<Integer>smallop=new ArrayList<>();
				ans.add(all_connected_components(edge,i,flag,smallop));
			}
		}
		
		for (int i = 0; i < ans.size(); i++) {
            Collections.sort(ans.get(i));
        }
		
		for(int i=0;i<ans.size();i++) {
			for(int j=0;j<ans.get(i).size();j++) {
				System.out.print(ans.get(i).get(j)+" ");
			}
			System.out.println();
		}	
	}
	

	
	private static ArrayList<Integer> all_connected_components(int[][] edge, int sv,boolean[] flag, ArrayList<Integer> smallop) {
		flag[sv]=true;
		int n=edge.length;
		smallop.add(sv);
		for(int i=0;i<n;i++) {
			if(edge[sv][i]==1 && !flag[i]) {
				all_connected_components(edge, i, flag, smallop);
			}
		}
		
		return smallop;
	}

	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner sc=new Scanner(System.in);
		//System.out.println( "Enter vertix ");
		int v=sc.nextInt();
		//System.out.println( "Enter edge ");
		int e=sc.nextInt();
	
		int edge[][]=new int[v][v];
		
		for(int i=0;i<e;i++) {
			//System.out.println((i+1)+" Enter Edge pair");
			int fv=sc.nextInt();
			int sv=sc.nextInt();
			edge[fv][sv]=1;
			edge[sv][fv]=1;
		}
		all_connected_components(edge);
		
	}

}
